name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    env:
      POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Tests
        run: npm test

      deploy-to-s3:
      name: Upload README to S3
      runs-on: ubuntu-latest
      needs: lint-test
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        S3_BUCKET_NAME: ${{ secrets.PROFESSOR_S3_BUCKET_NAME }}  # Reference the secret for professor's S3 bucket
      steps:
        - name: Checkout Code
          uses: actions/checkout@v2

        - name: Install AWS CLI
          run: sudo apt-get install awscli  # This installs the AWS CLI

        - name: Upload README to S3
          run: |
            PROJECT_DESCRIPTION="BACKEND for Fullerton Deal Depot Project Group #2"
            TIMESTAMP=$(date +%Y%m%d%H%M%S)  # Generates a unique timestamp
            # Replace spaces with underscores and # with underscores for a valid filename
            UNIQUE_README_NAME="README-${PROJECT_DESCRIPTION// /_}"
            UNIQUE_README_NAME="${UNIQUE_README_NAME//\#/}"  # Remove the # symbol
            UNIQUE_README_NAME="${UNIQUE_README_NAME}-${TIMESTAMP}.md"  # Append timestamp
            aws s3 cp README.md s3://$S3_BUCKET_NAME/$UNIQUE_README_NAME  # Uploads README to the professor's S3 bucket


  deploy-preview:
    name: Deploy to Vercel (Preview)
    needs: lint-test
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    name: Deploy to Vercel (Production)
    needs: lint-test
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
